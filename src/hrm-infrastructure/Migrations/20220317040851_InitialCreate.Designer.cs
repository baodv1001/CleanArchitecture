// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hrm_infrastructure.Context;

#nullable disable

namespace hrm_infrastructure.Migrations
{
    [DbContext(typeof(HRMDbContext))]
    [Migration("20220317040851_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("hrm_infrastructure.Entities.ApproverEntity", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RequestModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId", "RequestModelId");

                    b.HasIndex("RequestModelId");

                    b.ToTable("Approvers");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.CodeEntity", b =>
                {
                    b.Property<Guid>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmployeeNum")
                        .HasColumnType("int");

                    b.HasKey("CodeId");

                    b.ToTable("Code", (string)null);

                    b.HasData(
                        new
                        {
                            CodeId = new Guid("e7f9aea0-99fd-4e2b-9ff7-66e88e5accfb"),
                            EmployeeNum = 1
                        });
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.DateoffEntity", b =>
                {
                    b.Property<Guid>("DateoffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AfternoonFlg")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MorningFlg")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OffDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DateoffId");

                    b.ToTable("Dateoffs");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.DepartmentEnity", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeEntity", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PersonalId")
                        .IsUnique()
                        .HasFilter("[PersonalId] IS NOT NULL");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeTeamEntity", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("EmployeeTeams");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeTypeEntity", b =>
                {
                    b.Property<Guid>("EmployeeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.OfficeEntity", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.PersonalEntity", b =>
                {
                    b.Property<Guid>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonalId");

                    b.ToTable("Personals");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.PositionEntity", b =>
                {
                    b.Property<Guid>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestDateoffEntity", b =>
                {
                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DateoffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequestId", "DateoffId");

                    b.HasIndex("DateoffId");

                    b.ToTable("RequestDateoffs");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestEntity", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RequestModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestModelId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestModelEntity", b =>
                {
                    b.Property<Guid>("RequestModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Deadline")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistanceDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsSendDirect")
                        .HasColumnType("bit");

                    b.Property<int>("LimitDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RequestModelId");

                    b.ToTable("RequestModels");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleNum")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("c5bd4c5b-d871-445d-b1c9-c10b278dc448"),
                            RoleName = "Admin",
                            RoleNum = 1
                        },
                        new
                        {
                            RoleId = new Guid("462ff7f9-b75b-47e8-afaf-379ecc78ced8"),
                            RoleName = "Leader",
                            RoleNum = 2
                        },
                        new
                        {
                            RoleId = new Guid("a1242ea5-da62-417e-b493-bd6aeb67d678"),
                            RoleName = "Human Resource",
                            RoleNum = 3
                        },
                        new
                        {
                            RoleId = new Guid("bad2dae2-050d-47b5-8549-12644f44acff"),
                            RoleName = "Employee",
                            RoleNum = 4
                        },
                        new
                        {
                            RoleId = new Guid("96bdcb87-5f30-4121-9e1c-807b38e97ad6"),
                            RoleName = "Guest",
                            RoleNum = 5
                        });
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.TeamEntity", b =>
                {
                    b.Property<Guid>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TeamId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.ApproverEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.EmployeeEntity", "Employee")
                        .WithMany("Approvers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrm_infrastructure.Entities.RequestModelEntity", "RequestModel")
                        .WithMany("Approvers")
                        .HasForeignKey("RequestModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RequestModel");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.EmployeeTypeEntity", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("hrm_infrastructure.Entities.OfficeEntity", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId");

                    b.HasOne("hrm_infrastructure.Entities.PersonalEntity", "Personal")
                        .WithOne("Employee")
                        .HasForeignKey("hrm_infrastructure.Entities.EmployeeEntity", "PersonalId");

                    b.HasOne("hrm_infrastructure.Entities.PositionEntity", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId");

                    b.Navigation("EmployeeType");

                    b.Navigation("Office");

                    b.Navigation("Personal");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeTeamEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.EmployeeEntity", "Employee")
                        .WithMany("EmployeeTeams")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrm_infrastructure.Entities.TeamEntity", "Team")
                        .WithMany("EmployeeTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestDateoffEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.DateoffEntity", "Dateoff")
                        .WithMany("RequestDateoffs")
                        .HasForeignKey("DateoffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrm_infrastructure.Entities.RequestEntity", "Request")
                        .WithMany("RequestDateoffs")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dateoff");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.EmployeeEntity", "Employee")
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("hrm_infrastructure.Entities.RequestModelEntity", "RequestModel")
                        .WithMany("Requests")
                        .HasForeignKey("RequestModelId");

                    b.Navigation("Employee");

                    b.Navigation("RequestModel");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.TeamEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.DepartmentEnity", "Department")
                        .WithMany("Teams")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("hrm_infrastructure.Entities.EmployeeEntity", "Manager")
                        .WithMany("TeamLeaders")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Department");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.UserEntity", b =>
                {
                    b.HasOne("hrm_infrastructure.Entities.EmployeeEntity", "Employee")
                        .WithOne("User")
                        .HasForeignKey("hrm_infrastructure.Entities.UserEntity", "EmployeeId");

                    b.HasOne("hrm_infrastructure.Entities.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.DateoffEntity", b =>
                {
                    b.Navigation("RequestDateoffs");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.DepartmentEnity", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeEntity", b =>
                {
                    b.Navigation("Approvers");

                    b.Navigation("EmployeeTeams");

                    b.Navigation("Requests");

                    b.Navigation("TeamLeaders");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.EmployeeTypeEntity", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.OfficeEntity", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.PersonalEntity", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.PositionEntity", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestEntity", b =>
                {
                    b.Navigation("RequestDateoffs");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RequestModelEntity", b =>
                {
                    b.Navigation("Approvers");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("hrm_infrastructure.Entities.TeamEntity", b =>
                {
                    b.Navigation("EmployeeTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
